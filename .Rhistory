y='E-TCR [K]') +
guides(col=guide_legend(title="ESMs")) +
stat_regline_equation(label.y=3.1) +
stat_cor(label.x.npc=0, label.y=3.0, method="pearson", vjust=1) + # add correlation coef
## `vline` for observation-vertical ##
# geom_vline(aes(xintercept=2.311),
#            color="#F8766D",
#            linetype="dashed", size=0.6) +
## shading area for observed TCR ##
# geom_rect(aes(ymin=-Inf, ymax=Inf, xmin=1.96,xmax=2.68),
#           fill="red", alpha=0.175,
#           data = data.frame(), inherit.aes = FALSE) +
## `hline` for observation-horizontal ##
geom_hline(aes(yintercept=2.311),
color="#F8766D",
linetype="dashed", size=0.6) +
## shading area for observed TCR ##
geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=1.96, ymax=2.68),
fill="red", alpha=0.175,
data = data.frame(), inherit.aes = FALSE) +
theme_bw() +
scale_x_continuous(limits = c(1.0, 3.25)) +
scale_y_continuous(limits = c(1.0, 3.25)) +
theme(legend.spacing.x = unit(0.0,"cm"),
legend.spacing.y = unit(0.1,"cm"),
legend.text=element_text(size=10, margin=margin(l=5, r=25, unit = "pt") ), # spacing around text
legend.key.size=unit(5, "mm"),
legend.text.align=0,
legend.margin = margin(c(0, 0, 0, 0))
)
# x11()
p_scatter
p_scatter <- ggplot(plot_data,
aes_string(x="TCS_reported",
y="TCS_global_cvt"
),
) +
geom_point(shape=21, fill="#008BFF", color="#008BFF", alpha=0.8) +    # Use hollow circles
# geom_text(aes(label=ifelse((TCS_reported<CI_L | TCS_reported>CI_U), as.character(Model),'')), hjust=-0.05, vjust=0, size=3) + # add mod names to outliers
geom_text(aes(label=labels, col=Model),hjust=-0.3, vjust=-0.1, size=3.5, fontface="bold", position=position_jitter(ifelse(plot_data$labels=='12',0,1))
) + # add mod labels to points +
scale_color_manual(values=rep("black", 22)) +
coord_cartesian(clip = 'off') + # turn off clipping
# geom_smooth(method=lm, se=FALSE) +  # Add linear regression line
geom_abline(intercept = 0.76, slope = 0.69, size=0.6, color='#008BFF', linetype = "solid") +
labs(
# subtitle="Converted global TCS",
x='TCR [K]',
y='E-TCR [K]') +
guides(col=guide_legend(title="ESMs")) +
stat_regline_equation(label.y=3.1) +
stat_cor(label.x.npc=0, label.y=3.0, method="pearson", vjust=1) + # add correlation coef
## `vline` for observation-vertical ##
# geom_vline(aes(xintercept=2.311),
#            color="#F8766D",
#            linetype="dashed", size=0.6) +
## shading area for observed TCR ##
# geom_rect(aes(ymin=-Inf, ymax=Inf, xmin=1.96,xmax=2.68),
#           fill="red", alpha=0.175,
#           data = data.frame(), inherit.aes = FALSE) +
## `hline` for observation-horizontal ##
geom_hline(aes(yintercept=2.311),
color="#F8766D",
linetype="dashed", size=0.6) +
## shading area for observed TCR ##
geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=1.96, ymax=2.68),
fill="red", alpha=0.175,
data = data.frame(), inherit.aes = FALSE) +
theme_bw() +
scale_x_continuous(limits = c(1.0, 3.25)) +
scale_y_continuous(limits = c(1.0, 3.25)) +
theme(legend.spacing.x = unit(0.0,"cm"),
legend.spacing.y = unit(0.1,"cm"),
legend.text=element_text(size=10, margin=margin(l=5, r=25, unit = "pt") ), # spacing around text
legend.key.size=unit(5, "mm"),
legend.text.align=0,
legend.margin = margin(c(0, 0, 0, 0))
)
# x11()
p_scatter
plot_data[plot_data$labels==12,"TCS_reported"]
plot_data[plot_data$labels==12,"TCS_reported"] %>% unlist()
### Estimated v.s Reported TCS scatter plot -----------
FM_cvt <- FM_estimates %>% select(Model, TCS_reported, TCS_global_cvt, CI_L, CI_U)
plot_data <- FM_cvt %>% drop_na(TCS_reported) %>%
mutate(labels=factor(1:n()))
plot_data_label <- plot_data[plot_data$labels==12,"TCS_reported"]=1.857
plot_data <- FM_cvt %>% drop_na(TCS_reported) %>%
mutate(labels=factor(1:n()))
plot_data_label <- plot_data
plot_data_label[plot_data_label$labels=="12","TCS_reported"]=1.857
plot_data_label[plot_data_label$labels=="12","TCS_reported"]
plot_data_label[plot_data_label$labels=="12","TCS_reported"] %>% unlist()
p_scatter <- ggplot(plot_data,
aes_string(x="TCS_reported",
y="TCS_global_cvt"
),
) +
geom_point(shape=21, fill="#008BFF", color="#008BFF", alpha=0.8) +    # Use hollow circles
# geom_text(aes(label=ifelse((TCS_reported<CI_L | TCS_reported>CI_U), as.character(Model),'')), hjust=-0.05, vjust=0, size=3) + # add mod names to outliers
geom_text(data=plot_data_label, aes(label=labels, col=Model), hjust=-0.3, vjust=-0.1, size=3.5, fontface="bold")
p_scatter <- ggplot(plot_data,
aes_string(x="TCS_reported",
y="TCS_global_cvt"
),
) +
geom_point(shape=21, fill="#008BFF", color="#008BFF", alpha=0.8) +    # Use hollow circles
# geom_text(aes(label=ifelse((TCS_reported<CI_L | TCS_reported>CI_U), as.character(Model),'')), hjust=-0.05, vjust=0, size=3) + # add mod names to outliers
geom_text(data=plot_data_label, aes(label=labels, col=Model), hjust=-0.3, vjust=-0.1, size=3.5, fontface="bold"
) + # add mod labels to points +
scale_color_manual(values=rep("black", 22)) +
coord_cartesian(clip = 'off') + # turn off clipping
# geom_smooth(method=lm, se=FALSE) +  # Add linear regression line
geom_abline(intercept = 0.76, slope = 0.69, size=0.6, color='#008BFF', linetype = "solid") +
labs(
# subtitle="Converted global TCS",
x='TCR [K]',
y='E-TCR [K]') +
guides(col=guide_legend(title="ESMs")) +
stat_regline_equation(label.y=3.1) +
stat_cor(label.x.npc=0, label.y=3.0, method="pearson", vjust=1) + # add correlation coef
## `vline` for observation-vertical ##
# geom_vline(aes(xintercept=2.311),
#            color="#F8766D",
#            linetype="dashed", size=0.6) +
## shading area for observed TCR ##
# geom_rect(aes(ymin=-Inf, ymax=Inf, xmin=1.96,xmax=2.68),
#           fill="red", alpha=0.175,
#           data = data.frame(), inherit.aes = FALSE) +
## `hline` for observation-horizontal ##
geom_hline(aes(yintercept=2.311),
color="#F8766D",
linetype="dashed", size=0.6) +
## shading area for observed TCR ##
geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=1.96, ymax=2.68),
fill="red", alpha=0.175,
data = data.frame(), inherit.aes = FALSE) +
theme_bw() +
scale_x_continuous(limits = c(1.0, 3.25)) +
scale_y_continuous(limits = c(1.0, 3.25)) +
theme(legend.spacing.x = unit(0.0,"cm"),
legend.spacing.y = unit(0.1,"cm"),
legend.text=element_text(size=10, margin=margin(l=5, r=25, unit = "pt") ), # spacing around text
legend.key.size=unit(5, "mm"),
legend.text.align=0,
legend.margin = margin(c(0, 0, 0, 0))
)
# x11()
p_scatter
g <- ggplotGrob(p_scatter) # new figure handle
lbls <- 1:22
idx <- which( sapply(g$grobs[[15]][[1]][[1]]$grobs,
function(i){
"label" %in% names(i)
}
)
)
for(i in 1:length(idx)){
g$grobs[[15]][[1]][[1]]$grobs[[idx[i]]]$label <- lbls[i]
}
# f_name <- paste0(fig_dir, "TCR_pred_CRU_true_cvt_1211.png")
f_name <- paste0(fig_dir, "PNAS_Revision/TCR_pred_CRU_true_cvt_092122-3.png")
f_name
ppi <- 300
# png(f_name, width=8.47*ppi, height=4.78*ppi, res=ppi)
png(f_name, width=8.31*ppi, height=5.27*ppi, res=ppi)
grid::grid.draw(g)
dev.off()
plot_data_label[plot_data_label$labels=="12","TCS_reported"]=1.85
p_scatter <- ggplot(plot_data,
aes_string(x="TCS_reported",
y="TCS_global_cvt"
),
) +
geom_point(shape=21, fill="#008BFF", color="#008BFF", alpha=0.8) +    # Use hollow circles
# geom_text(aes(label=ifelse((TCS_reported<CI_L | TCS_reported>CI_U), as.character(Model),'')), hjust=-0.05, vjust=0, size=3) + # add mod names to outliers
geom_text(data=plot_data_label, aes(label=labels, col=Model), hjust=-0.3, vjust=-0.1, size=3.5, fontface="bold"
) + # add mod labels to points +
scale_color_manual(values=rep("black", 22)) +
coord_cartesian(clip = 'off') + # turn off clipping
# geom_smooth(method=lm, se=FALSE) +  # Add linear regression line
geom_abline(intercept = 0.76, slope = 0.69, size=0.6, color='#008BFF', linetype = "solid") +
labs(
# subtitle="Converted global TCS",
x='TCR [K]',
y='E-TCR [K]') +
guides(col=guide_legend(title="ESMs")) +
stat_regline_equation(label.y=3.1) +
stat_cor(label.x.npc=0, label.y=3.0, method="pearson", vjust=1) + # add correlation coef
## `vline` for observation-vertical ##
# geom_vline(aes(xintercept=2.311),
#            color="#F8766D",
#            linetype="dashed", size=0.6) +
## shading area for observed TCR ##
# geom_rect(aes(ymin=-Inf, ymax=Inf, xmin=1.96,xmax=2.68),
#           fill="red", alpha=0.175,
#           data = data.frame(), inherit.aes = FALSE) +
## `hline` for observation-horizontal ##
geom_hline(aes(yintercept=2.311),
color="#F8766D",
linetype="dashed", size=0.6) +
## shading area for observed TCR ##
geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=1.96, ymax=2.68),
fill="red", alpha=0.175,
data = data.frame(), inherit.aes = FALSE) +
theme_bw() +
scale_x_continuous(limits = c(1.0, 3.25)) +
scale_y_continuous(limits = c(1.0, 3.25)) +
theme(legend.spacing.x = unit(0.0,"cm"),
legend.spacing.y = unit(0.1,"cm"),
legend.text=element_text(size=10, margin=margin(l=5, r=25, unit = "pt") ), # spacing around text
legend.key.size=unit(5, "mm"),
legend.text.align=0,
legend.margin = margin(c(0, 0, 0, 0))
)
# x11()
p_scatter
g <- ggplotGrob(p_scatter) # new figure handle
lbls <- 1:22
idx <- which( sapply(g$grobs[[15]][[1]][[1]]$grobs,
function(i){
"label" %in% names(i)
}
)
)
for(i in 1:length(idx)){
g$grobs[[15]][[1]][[1]]$grobs[[idx[i]]]$label <- lbls[i]
}
# f_name <- paste0(fig_dir, "TCR_pred_CRU_true_cvt_1211.png")
f_name <- paste0(fig_dir, "PNAS_Revision/TCR_pred_CRU_true_cvt_092122-3.png")
f_name
ppi <- 300
# png(f_name, width=8.47*ppi, height=4.78*ppi, res=ppi)
png(f_name, width=8.31*ppi, height=5.27*ppi, res=ppi)
grid::grid.draw(g)
dev.off()
plot_data_label[plot_data_label$labels=="12","TCS_reported"]=1.84
p_scatter <- ggplot(plot_data,
aes_string(x="TCS_reported",
y="TCS_global_cvt"
),
) +
geom_point(shape=21, fill="#008BFF", color="#008BFF", alpha=0.8) +    # Use hollow circles
# geom_text(aes(label=ifelse((TCS_reported<CI_L | TCS_reported>CI_U), as.character(Model),'')), hjust=-0.05, vjust=0, size=3) + # add mod names to outliers
geom_text(data=plot_data_label, aes(label=labels, col=Model), hjust=-0.3, vjust=-0.1, size=3.5, fontface="bold"
) + # add mod labels to points +
scale_color_manual(values=rep("black", 22)) +
coord_cartesian(clip = 'off') + # turn off clipping
# geom_smooth(method=lm, se=FALSE) +  # Add linear regression line
geom_abline(intercept = 0.76, slope = 0.69, size=0.6, color='#008BFF', linetype = "solid") +
labs(
# subtitle="Converted global TCS",
x='TCR [K]',
y='E-TCR [K]') +
guides(col=guide_legend(title="ESMs")) +
stat_regline_equation(label.y=3.1) +
stat_cor(label.x.npc=0, label.y=3.0, method="pearson", vjust=1) + # add correlation coef
## `vline` for observation-vertical ##
# geom_vline(aes(xintercept=2.311),
#            color="#F8766D",
#            linetype="dashed", size=0.6) +
## shading area for observed TCR ##
# geom_rect(aes(ymin=-Inf, ymax=Inf, xmin=1.96,xmax=2.68),
#           fill="red", alpha=0.175,
#           data = data.frame(), inherit.aes = FALSE) +
## `hline` for observation-horizontal ##
geom_hline(aes(yintercept=2.311),
color="#F8766D",
linetype="dashed", size=0.6) +
## shading area for observed TCR ##
geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=1.96, ymax=2.68),
fill="red", alpha=0.175,
data = data.frame(), inherit.aes = FALSE) +
theme_bw() +
scale_x_continuous(limits = c(1.0, 3.25)) +
scale_y_continuous(limits = c(1.0, 3.25)) +
theme(legend.spacing.x = unit(0.0,"cm"),
legend.spacing.y = unit(0.1,"cm"),
legend.text=element_text(size=10, margin=margin(l=5, r=25, unit = "pt") ), # spacing around text
legend.key.size=unit(5, "mm"),
legend.text.align=0,
legend.margin = margin(c(0, 0, 0, 0))
)
# x11()
p_scatter
g <- ggplotGrob(p_scatter) # new figure handle
lbls <- 1:22
idx <- which( sapply(g$grobs[[15]][[1]][[1]]$grobs,
function(i){
"label" %in% names(i)
}
)
)
for(i in 1:length(idx)){
g$grobs[[15]][[1]][[1]]$grobs[[idx[i]]]$label <- lbls[i]
}
# f_name <- paste0(fig_dir, "TCR_pred_CRU_true_cvt_1211.png")
f_name <- paste0(fig_dir, "PNAS_Revision/TCR_pred_CRU_true_cvt_092122-3.png")
f_name
ppi <- 300
# png(f_name, width=8.47*ppi, height=4.78*ppi, res=ppi)
png(f_name, width=8.31*ppi, height=5.27*ppi, res=ppi)
grid::grid.draw(g)
dev.off()
plot_data_label[plot_data_label$labels=="12","TCS_reported"]=1.83
p_scatter <- ggplot(plot_data,
aes_string(x="TCS_reported",
y="TCS_global_cvt"
),
) +
geom_point(shape=21, fill="#008BFF", color="#008BFF", alpha=0.8) +    # Use hollow circles
# geom_text(aes(label=ifelse((TCS_reported<CI_L | TCS_reported>CI_U), as.character(Model),'')), hjust=-0.05, vjust=0, size=3) + # add mod names to outliers
geom_text(data=plot_data_label, aes(label=labels, col=Model), hjust=-0.3, vjust=-0.1, size=3.5, fontface="bold"
) + # add mod labels to points +
scale_color_manual(values=rep("black", 22)) +
coord_cartesian(clip = 'off') + # turn off clipping
# geom_smooth(method=lm, se=FALSE) +  # Add linear regression line
geom_abline(intercept = 0.76, slope = 0.69, size=0.6, color='#008BFF', linetype = "solid") +
labs(
# subtitle="Converted global TCS",
x='TCR [K]',
y='E-TCR [K]') +
guides(col=guide_legend(title="ESMs")) +
stat_regline_equation(label.y=3.1) +
stat_cor(label.x.npc=0, label.y=3.0, method="pearson", vjust=1) + # add correlation coef
## `vline` for observation-vertical ##
# geom_vline(aes(xintercept=2.311),
#            color="#F8766D",
#            linetype="dashed", size=0.6) +
## shading area for observed TCR ##
# geom_rect(aes(ymin=-Inf, ymax=Inf, xmin=1.96,xmax=2.68),
#           fill="red", alpha=0.175,
#           data = data.frame(), inherit.aes = FALSE) +
## `hline` for observation-horizontal ##
geom_hline(aes(yintercept=2.311),
color="#F8766D",
linetype="dashed", size=0.6) +
## shading area for observed TCR ##
geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=1.96, ymax=2.68),
fill="red", alpha=0.175,
data = data.frame(), inherit.aes = FALSE) +
theme_bw() +
scale_x_continuous(limits = c(1.0, 3.25)) +
scale_y_continuous(limits = c(1.0, 3.25)) +
theme(legend.spacing.x = unit(0.0,"cm"),
legend.spacing.y = unit(0.1,"cm"),
legend.text=element_text(size=10, margin=margin(l=5, r=25, unit = "pt") ), # spacing around text
legend.key.size=unit(5, "mm"),
legend.text.align=0,
legend.margin = margin(c(0, 0, 0, 0))
)
# x11()
p_scatter
g <- ggplotGrob(p_scatter) # new figure handle
lbls <- 1:22
idx <- which( sapply(g$grobs[[15]][[1]][[1]]$grobs,
function(i){
"label" %in% names(i)
}
)
)
for(i in 1:length(idx)){
g$grobs[[15]][[1]][[1]]$grobs[[idx[i]]]$label <- lbls[i]
}
# f_name <- paste0(fig_dir, "TCR_pred_CRU_true_cvt_1211.png")
f_name <- paste0(fig_dir, "PNAS_Revision/TCR_pred_CRU_true_cvt_092122-3.png")
f_name
ppi <- 300
# png(f_name, width=8.47*ppi, height=4.78*ppi, res=ppi)
png(f_name, width=8.31*ppi, height=5.27*ppi, res=ppi)
grid::grid.draw(g)
dev.off()
plot_data_label[plot_data_label$labels=="12","TCS_reported"]=1.82
p_scatter <- ggplot(plot_data,
aes_string(x="TCS_reported",
y="TCS_global_cvt"
),
) +
geom_point(shape=21, fill="#008BFF", color="#008BFF", alpha=0.8) +    # Use hollow circles
# geom_text(aes(label=ifelse((TCS_reported<CI_L | TCS_reported>CI_U), as.character(Model),'')), hjust=-0.05, vjust=0, size=3) + # add mod names to outliers
geom_text(data=plot_data_label, aes(label=labels, col=Model), hjust=-0.3, vjust=-0.1, size=3.5, fontface="bold"
) + # add mod labels to points +
scale_color_manual(values=rep("black", 22)) +
coord_cartesian(clip = 'off') + # turn off clipping
# geom_smooth(method=lm, se=FALSE) +  # Add linear regression line
geom_abline(intercept = 0.76, slope = 0.69, size=0.6, color='#008BFF', linetype = "solid") +
labs(
# subtitle="Converted global TCS",
x='TCR [K]',
y='E-TCR [K]') +
guides(col=guide_legend(title="ESMs")) +
stat_regline_equation(label.y=3.1) +
stat_cor(label.x.npc=0, label.y=3.0, method="pearson", vjust=1) + # add correlation coef
## `vline` for observation-vertical ##
# geom_vline(aes(xintercept=2.311),
#            color="#F8766D",
#            linetype="dashed", size=0.6) +
## shading area for observed TCR ##
# geom_rect(aes(ymin=-Inf, ymax=Inf, xmin=1.96,xmax=2.68),
#           fill="red", alpha=0.175,
#           data = data.frame(), inherit.aes = FALSE) +
## `hline` for observation-horizontal ##
geom_hline(aes(yintercept=2.311),
color="#F8766D",
linetype="dashed", size=0.6) +
## shading area for observed TCR ##
geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=1.96, ymax=2.68),
fill="red", alpha=0.175,
data = data.frame(), inherit.aes = FALSE) +
theme_bw() +
scale_x_continuous(limits = c(1.0, 3.25)) +
scale_y_continuous(limits = c(1.0, 3.25)) +
theme(legend.spacing.x = unit(0.0,"cm"),
legend.spacing.y = unit(0.1,"cm"),
legend.text=element_text(size=10, margin=margin(l=5, r=25, unit = "pt") ), # spacing around text
legend.key.size=unit(5, "mm"),
legend.text.align=0,
legend.margin = margin(c(0, 0, 0, 0))
)
# x11()
p_scatter
g <- ggplotGrob(p_scatter) # new figure handle
lbls <- 1:22
idx <- which( sapply(g$grobs[[15]][[1]][[1]]$grobs,
function(i){
"label" %in% names(i)
}
)
)
for(i in 1:length(idx)){
g$grobs[[15]][[1]][[1]]$grobs[[idx[i]]]$label <- lbls[i]
}
# f_name <- paste0(fig_dir, "TCR_pred_CRU_true_cvt_1211.png")
f_name <- paste0(fig_dir, "PNAS_Revision/TCR_pred_CRU_true_cvt_092122-3.png")
f_name
ppi <- 300
# png(f_name, width=8.47*ppi, height=4.78*ppi, res=ppi)
png(f_name, width=8.31*ppi, height=5.27*ppi, res=ppi)
grid::grid.draw(g)
dev.off()
plot_data_label[plot_data_label$labels=="18","TCS_reported"]
plot_data_label[plot_data_label$labels=="18","TCS_reported"]=1.65
p_scatter <- ggplot(plot_data,
aes_string(x="TCS_reported",
y="TCS_global_cvt"
),
) +
geom_point(shape=21, fill="#008BFF", color="#008BFF", alpha=0.8) +    # Use hollow circles
# geom_text(aes(label=ifelse((TCS_reported<CI_L | TCS_reported>CI_U), as.character(Model),'')), hjust=-0.05, vjust=0, size=3) + # add mod names to outliers
geom_text(data=plot_data_label, aes(label=labels, col=Model), hjust=-0.3, vjust=-0.1, size=3.5, fontface="bold"
) + # add mod labels to points +
scale_color_manual(values=rep("black", 22)) +
coord_cartesian(clip = 'off') + # turn off clipping
# geom_smooth(method=lm, se=FALSE) +  # Add linear regression line
geom_abline(intercept = 0.76, slope = 0.69, size=0.6, color='#008BFF', linetype = "solid") +
labs(
# subtitle="Converted global TCS",
x='TCR [K]',
y='E-TCR [K]') +
guides(col=guide_legend(title="ESMs")) +
stat_regline_equation(label.y=3.1) +
stat_cor(label.x.npc=0, label.y=3.0, method="pearson", vjust=1) + # add correlation coef
## `vline` for observation-vertical ##
# geom_vline(aes(xintercept=2.311),
#            color="#F8766D",
#            linetype="dashed", size=0.6) +
## shading area for observed TCR ##
# geom_rect(aes(ymin=-Inf, ymax=Inf, xmin=1.96,xmax=2.68),
#           fill="red", alpha=0.175,
#           data = data.frame(), inherit.aes = FALSE) +
## `hline` for observation-horizontal ##
geom_hline(aes(yintercept=2.311),
color="#F8766D",
linetype="dashed", size=0.6) +
## shading area for observed TCR ##
geom_rect(aes(xmin=-Inf, xmax=Inf, ymin=1.96, ymax=2.68),
fill="red", alpha=0.175,
data = data.frame(), inherit.aes = FALSE) +
theme_bw() +
scale_x_continuous(limits = c(1.0, 3.25)) +
scale_y_continuous(limits = c(1.0, 3.25)) +
theme(legend.spacing.x = unit(0.0,"cm"),
legend.spacing.y = unit(0.1,"cm"),
legend.text=element_text(size=10, margin=margin(l=5, r=25, unit = "pt") ), # spacing around text
legend.key.size=unit(5, "mm"),
legend.text.align=0,
legend.margin = margin(c(0, 0, 0, 0))
)
# x11()
p_scatter
g <- ggplotGrob(p_scatter) # new figure handle
lbls <- 1:22
idx <- which( sapply(g$grobs[[15]][[1]][[1]]$grobs,
function(i){
"label" %in% names(i)
}
)
)
for(i in 1:length(idx)){
g$grobs[[15]][[1]][[1]]$grobs[[idx[i]]]$label <- lbls[i]
}
# f_name <- paste0(fig_dir, "TCR_pred_CRU_true_cvt_1211.png")
f_name <- paste0(fig_dir, "PNAS_Revision/TCR_pred_CRU_true_cvt_092122-3.png")
f_name
ppi <- 300
# png(f_name, width=8.47*ppi, height=4.78*ppi, res=ppi)
png(f_name, width=8.31*ppi, height=5.27*ppi, res=ppi)
grid::grid.draw(g)
dev.off()
setwd("/Users/Menghan/Documents/postdoc/GDP/data/Shared folder/")
source("/Users/Menghan/Documents/postdoc/GDP/data/Shared folder/fun_script_data_process.R")
source("/Users/Menghan/Documents/postdoc/GDP/data/Shared folder/fun_script_econ.R")
